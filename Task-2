import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import fetch_california_housing
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

housing = fetch_california_housing()
df = pd.DataFrame(data=housing.data, columns=housing.feature_names)
df['MedHouseVal'] = housing.target
X = df.drop('MedHouseVal', axis=1)
y = df['MedHouseVal']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")

test_df = X_test.copy()
test_df['MedHouseVal'] = y_test
test_df['PREDICTED_VAL'] = y_pred
plt.figure(figsize=(12, 6))

plt.subplot(1, 2, 1)
plt.scatter(test_df['MedInc'], test_df['MedHouseVal'], color='blue', label='Actual Prices')
plt.scatter(test_df['MedInc'], test_df['PREDICTED_VAL'], color='red', label='Predicted Prices')
plt.xlabel('Median Income (MedInc)')
plt.ylabel('Median House Value')
plt.title('Actual vs. Predicted Prices')
plt.legend()

plt.subplot(1, 2, 2)
plt.scatter(X_test['MedInc'], y_test, color='blue', label='Actual Prices')
plt.plot(X_test['MedInc'], y_pred, color='red', linewidth=2, label='Regression Line')
plt.xlabel('Median Income (MedInc)')
plt.ylabel('Median House Value')
plt.title('Regression Line for MedInc Feature')
plt.legend()

plt.tight_layout()
plt.show()
